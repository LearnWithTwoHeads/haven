# This is a simple example of a PersistentVolume and PersistentVolumeClaim in Kubernetes.
# The PersistentVolume is a hostPath volume, which means it is a volume on the host machine.
# The PersistentVolumeClaim is a request for a PersistentVolume.
# The Pod uses the PersistentVolumeClaim to mount the PersistentVolume.

# It is important to note that if the directory does not exist on the host machine, the PV will be created.

# This is not intended for production use, because the data will exist on the host machine, and is not easily shared between nodes, and therefore pods.
# To get consistency, pods would need to be scheduled on the same node every time.

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-volume
  labels:
    type: local
spec:
  storageClassName: microk8s-hostpath
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/yoofi"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pv-claim
spec:
  storageClassName: microk8s-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: pv-pod
spec:
  volumes:
    - name: pv-storage
      persistentVolumeClaim:
        claimName: pv-claim
  containers:
    - name: pv-container
      image: nginx
      ports:
        - containerPort: 80
          name: "http-server"
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: pv-storage